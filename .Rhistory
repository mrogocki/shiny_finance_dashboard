install.packages(name_UI <- function(id) {
ns <- NS(id)
tagList(
)
}
name <- function(input, output, session) {
})
install.packages("shiny")
library(shiny)
"Narz"
)
)
"Narz"
)
)
"Narz"
)
)
runApp()
ui <- fluidPage(
titlePanel(
h1("Narzedzie finansowe"),
sidebarLayout(
sidebarPanel(
)
)
))
ui <- fluidPage(
titlePanel(
h1("Narzedzie finansowe"),
sidebarLayout(
sidebarPanel()
),
mainPanel()
))
ui <- fluidPage(
titlePanel(
h1("Narzedzie finansowe"),
sidebarLayout(
sidebarPanel(),
mainPanel()
),
))
ui <- fluidPage(
titlePanel(h1("Narzedzie finansowe"),
sidebarLayout(
sidebarPanel("finanse"),
mainPanel("finanse")
),
))
ui <- fluidPage(
titlePanel(h1("Narzedzie finansowe")),
sidebarLayout(
sidebarPanel("finanse"),
mainPanel("finanse")
),
))
ui <- fluidPage(
titlePanel(h1("Narzedzie finansowe")),
sidebarLayout(
sidebarPanel("finanse"),
mainPanel("finanse")
),
))
ui <- fluidPage(
titlePanel(h1("Narzedzie finansowe")),
sidebarLayout(
sidebarPanel("finanse"),
mainPanel("finanse")
),
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel(h1("Narzedzie finansowe", position = "center")),
sidebarLayout(
sidebarPanel("finanse"),
mainPanel("finanse")
))
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
column(3,
h1("Plan finansowy"))
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
column(4,
h2("Plan finansowy"))
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
column(6,
h2("Plan finansowy")),
column(6,
h3("Ustaw okres czasu ktory cie interesuje"))
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
column(6,
h2("Plan finansowy")),
column(6,
h3("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = 0,
max = 100,
value = c(0,100)))
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
column(6,
h2("Plan finansowy")),
column(6,
h4("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = 0,
max = 100,
value = c(0,100)))
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
account_data <- read.csv("20201030-1930715246-umsatz(2(.csv")
account_data <- read.csv("C:\Users\Lenovo\Desktop\Narzedzie Finansowe\Narzedzie_finansowe\20201030-1930715246-umsatz (2).CSV")
account_data <- read.csv("C:\Users\Lenovo\Desktop\Narzedzie Finansowe\Narzedzie_finansowe\20201030-1930715246-umsatz.CSV")
account_data <- read.csv("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.CSV")
View(account_data)
View(account_data)
library(readxl)
account_data <- read_xls("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.CSV")
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.CSV")
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.xlsx")
account_data <- read_("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.csv")
account_data <- read.csv("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.csv")
View(account_data)
View(account_data)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.xlsx")
View(account_data)
View(account_data)
View(account_data)
column(6,
h2("Plan finansowy")),
column(6,
h4("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = min(account_data$Buchungstag),
max = max(account_data$Buchungstag),
value = account_data$Buchungstag),
br(),
plotOutput("data")
)
server <- function(input, output){
output$data <- renderPlot(
)
}
shinyApp(ui = ui, server = server)
column(6,
h2("Plan finansowy")),
column(6,
h4("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = as.character(min(account_data$Buchungstag)),
max = as.character(max(account_data$Buchungstag)),
value = account_data$Buchungstag),
br(),
plotOutput("data")
)
server <- function(input, output){
output$data <- renderPlot(
)
}
shinyApp(ui = ui, server = server)
runApp()
column(6,
h2("Plan finansowy")),
column(6,
h4("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = min(account_data$Buchungstag),
max = max(account_data$Buchungstag),
value = account_data$Buchungstag),
br(),
)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
runApp()
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
library(shiny)
library(readxl)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.xlsx")
ui <- fluidPage(
column(6,
h2("Plan finansowy")),
column(6,
h4("Ustaw okres czasu ktory cie interesuje"),
sliderInput("time",
label = "Prosze wybrac",
min = min(account_data$Buchungstag),
max = max(account_data$Buchungstag),
value = account_data$Buchungstag),
br(),
))
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
source('planer_finansowy.R')
runApp()
runApp('planer_finansowy.R')
install.packages("ggplot2")
install.packages("dplyr")
View(account_data)
View(account_data)
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
library(shiny)
library(readxl)
library(ggplot2)
library(dplyr)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201030-1930715246-umsatz.xlsx")
timeInput <- reactive({
account_data %>%
select(Buchungstag == input$time)
})
# Plots the time data
output$ts_data <- renderPlot({
selected_data <- timeInput()
ggplot(selected_data, aes(Buchungstag, Betrag))
}
)
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
install.packages("data.table")
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
View(account_data)
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
runApp('planer_finansowy.R')
shiny::runApp()
runApp()
setwd("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe")
source(Load_data.R)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?menuItem
runApp()
library(shiny); source('planer_finansowy.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201124-1930715246-umsatz.xlsx")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages("DT")
View(account_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
account_data %>%
group_by(`Beguenstigter/Zahlungspflichtiger`) %>%
summarise(Betrag_gesamt = sum(Betrag))
runApp()
runApp()
runApp()
group_by(`Beguenstigter/Zahlungspflichtiger`) %>%
summarise(Betrag_gesamt = sum(Betrag)) %>%
arrange(Betrag_gesamt)
account_data %>%
group_by(`Beguenstigter/Zahlungspflichtiger`) %>%
summarise(Betrag_gesamt = sum(Betrag)) %>%
arrange(Betrag_gesamt)
runApp()
runApp()
runApp()
runApp()
runApp()
fitness <- rearead.csv("fitness.csv")
fitness <- read.csv("fitness.csv")
library(data.table)
fitness <- read.csv("fitness.csv") %>% as.data.table()
library(data.table)
library(dplyr)
fitness <- read.csv("fitness.csv") %>% as.data.table()
library(data.table)
View(fitness)
install.packages("openxlsx")
fitness <- openxlsx::read.xlsx("fitness.csv") %>% as.data.table()
fitness <- openxlsx::read.xlsx("fitness.xlsx") %>% as.data.table()
fitness <- openxlsx::read.xlsx("fitness.xlsx") %>% as.data.table()
library(data.table)
View(fitness)
fitness[Verwendungszweck == grepl("ALT")]
fitness[Verwendungszweck == grepl("ALT", fitness)]
fitness[Verwendungszweck == grepl("ALT", fitness[,Verwendungszweck])]
fitness[Verwendungszweck == grepl("friend", fitness[,Verwendungszweck])]
grepl("friend", fitness[,Verwendungszweck])]
grepl("friend", fitness[,Verwendungszweck])
fitness <- fitness[grepl("ALT", fitness[,Verwendungszweck])]
View(fitness)
fintess[, sum(Betrag)]
fitness[, sum(Betrag)]
openxlsx::write.xlsx(fitness, "flexxfitness.xlsx")
shiny::runApp()
install.packages("readxl")
runApp()
install.packages("ggplot2")
runApp()
install.packages("dplyr")
runApp()
install.packages("data.table")
install.packages("shinydashboard")
runApp()
install.packages("DT")
runApp()
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20201124-1930715246-umsatz.xlsx")
as_tibble(account_data)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20220201-1930715246-umsatz.xlsx")
as_tibble(account_data)
runApp()
library(magrittr)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20220201-1930715246-umsatz.xlsx") %>%
setDT()
View(account_data)
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20220201-1930715246-umsatz.xlsx") %>%
setDT() %>%
.[Beguenstigter/Zahlungspflichtiger != "MICHAEL JAN ROGOCKI"]
account_data <- read_xlsx("C:/Users/Lenovo/Desktop/Narzedzie Finansowe/Narzedzie_finansowe/20220201-1930715246-umsatz.xlsx") %>%
setDT() %>%
.[`Beguenstigter/Zahlungspflichtiger` != "MICHAEL JAN ROGOCKI"]
runApp()
runApp()
runApp()
install.packages("purrr")
install.packages("janitor")
?clean_names
install.packages("fs")
REL_FILE <- fs::path("2022", ext = "csv")
shiny::runApp()
?compose
runApp()
runApp()
source("~/GitHub/shiny_finance_dashboard/utils.R")
runApp()
account_data <- load_clean_data(REL_FILE) #%>%
View(account_data)
read.csv(REL_FILE)
ncol(read.csv(REL_FILE))
read.csv(REL_FILE, sep = ",")
read.csv(REL_FILE, sep = ";")
runApp()
account_data <- load_clean_data(REL_FILE) #%>%
source("~/GitHub/shiny_finance_dashboard/utils.R")
account_data <- load_clean_data(REL_FILE) #%>%
View(account_data)
?clean_names
source("~/GitHub/shiny_finance_dashboard/utils.R")
account_data <- load_clean_data(REL_FILE) #%>%
source("~/GitHub/shiny_finance_dashboard/utils.R")
source("~/GitHub/shiny_finance_dashboard/Load_data.R")
View(account_data)
shiny::runApp()
runApp()
renv::restore()
runApp()
install.packages("DT")
runApp()
